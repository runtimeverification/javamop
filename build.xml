<?xml version="1.0"?>
<project name="javamop" default="jar" basedir=".">
    <property name="installer.version" value="0.1" />
    <property name="javamop.version" value="0.1" />
    <property name="base" value="." />
    <property name="bin" value="bin" />
    <property name="build" value="build" />
    <property name="config" value="config" />
    <property name="dist" value="dist" />
    <property name="examples" value="examples" />
    <property name="lib" value="lib" />
    <property name="plugins" value="lib/plugins" />
    <property name="src" value="src" />
    <property name="src.tests" value="test" />
    <property name="temp" value="tmp" />
    <property name="reports.tests" value="test-reports" />
    <property name="build.tests" value="build" />
    <property environment="env" />
    <property name="scala.home" value="${env.SCALA_HOME}" />
    <property name="scala-compiler.jar" value="${scala.home}/lib/scala-compiler.jar" />
    <property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar" />
    <property name="scala-reflect.jar" value="${scala.home}/lib/scala-reflect.jar" />
    
    <path id="scala.classpath">
        <pathelement location="${scala-compiler.jar}" />
        <pathelement location="${scala-library.jar}" />
        <pathelement location="${scala-reflect.jar}" />
        <pathelement location="build" />
    </path>
    
    <path id="classpath.test">
        <pathelement location="lib/external/junit.jar" />
        <pathelement location="build" />
        <pathelement location="${src}" />
    </path>
    
    <taskdef resource="scala/tools/ant/antlib.xml">
        <classpath refid="scala.classpath" />
    </taskdef>
    
    <!-- redefined these if you change the directory names -->
    <property name="javamop" value="javamop" />
    <property name="test" value="javamoptestsuite" />
    <property name="javamoprt" value="javamoprt" />
    
    <target name="init">
        <mkdir dir="${build}" />
        <mkdir dir="${lib}" />
    </target>
    
    <target name="clean">
        <delete verbose="true">
            <fileset dir="${build}" />
        </delete>
        <delete dir="${dist}" />
        <delete dir="${build}" />
        <delete verbose="true" quiet="true">
            <fileset dir="${dist}" />
        </delete>
        <delete verbose="true">
            <fileset dir="${lib}">
                <include name="${javamop}.jar" />
                <include name="${test}.jar" />
            </fileset>
        </delete>
    </target>
    
    <target name="compile" depends="init">
        <javac srcdir="${src}" destdir="${build}" debug="off" optimize="on" includeantruntime="false">
            <exclude name="**/PTLTLPlugin.java" />
            <classpath>
                <pathelement location="lib/rvmonitor.jar"/>
                <pathelement location="lib/rt.jar"/>
		<pathelement location="lib/external/jcommander-1.36-SNAPSHOT.jar" />
            </classpath>
        </javac>
        <scalac srcdir="${src}" destdir="${build}" classpathref="scala.classpath" deprecation="yes" force="false">
            <include name="**/*.scala" />
        </scalac> 
        <!-- ugly hack -->
        <javac srcdir="${src}" destdir="${build}" debug="off" optimize="on" includeantruntime="false">
            <include name="**/PTLTLPlugin.java" />
        </javac>
        
        <!-- copy the schemas and property files to the build dir -->
        <copy todir="${build}">
            <fileset dir="${src}">
                <include name="**/*.xml" />
                <include name="**/*.properties" />
            </fileset>
        </copy>
    </target>
    
    <target name="jar" depends="compile">
        <jar destfile="${lib}/${javamop}.jar" basedir="${build}" includes="${javamop}/**" />
        <jar destfile="${lib}/${test}.jar" basedir="${build}" includes="${test}/**" />
    </target>

    <target name="installer" depends="jar">
        <!-- Run installer build -->
        <property name="install.jarfile" value="rv-install-${installer.version}.jar" />
        <echo message="Running IzPack to build the installer..."/>
        <mkdir dir="${temp}"/>
        <mkdir dir="${dist}"/>
        <echo message="Fetching RV installer base..."/>
        <get src="http://runtimeverification.com/dist/${install.jarfile}" dest="${temp}/${install.jarfile}"/>
        <unzip src="${temp}/${install.jarfile}" dest="${temp}">
            <patternset>
                <include name="res/**"/>
            </patternset>
        </unzip>
        <taskdef name="izpack" classpath="${temp}/${install.jarfile}" classname="com.izforge.izpack.ant.IzPackTask"/>
        <izpack input="install-definition.xml"
          output="${dist}/javamop-install.jar"
          installerType="standard"
          inheritAll="true"
          basedir="${base}"
          compression="deflate"
          compressionlevel="9"/>
        <!-- Clean working directory -->
        <echo message="Cleaning up working directory..."/>
        <delete dir="${temp}" quiet="true" includeemptydirs="true"/>
        <echo message="Done."/>
    </target>
    
    <target name="build-test" depends="jar" >
        <javac srcdir="${src.tests}" destdir="${build.tests}" debug="on" classpathref="classpath.test" includeantruntime="false" />
    </target>
    
    <target name="test" depends="build-test">
        <mkdir dir="${reports.tests}" />
        <junit printsummary="yes">
            <env key="LOGICPLUGINPATH" path="${plugins}" />
            <classpath>
                <fileset dir="lib">
                    <include name="*.jar" />
                </fileset>
                <pathelement location="${plugins}/*.jar" />
                <pathelement location="${build.tests}"/>
                <pathelement path="${java.class.path}"/>
                <path refid="classpath.test" />
            </classpath>
            <batchtest fork="yes" todir="${reports.tests}">
                <formatter type="xml"/>
                <fileset dir="${src.tests}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/TestHelper.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${reports.tests}">
            <fileset dir="${reports.tests}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.tests}/html"/>
        </junitreport>
    </target>
    
    <target name="fast_test" depends="build-test">
        <mkdir dir="${reports.tests}" />
        <junit forkmode="once" printsummary="yes">
            <env key="LOGICPLUGINPATH" path="${plugins}" />
            <classpath>
                <pathelement location="${plugins}/*.jar" />
                <pathelement location="${build.tests}"/>
                <pathelement path="${java.class.path}"/>
                <path refid="classpath.test" />
            </classpath>
            <batchtest fork="yes" todir="${reports.tests}">
                <formatter type="xml"/>
                <fileset dir="${src.tests}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/TestHelper.java"/>
                    <exclude name="**/examples/**"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${reports.tests}">
            <fileset dir="${reports.tests}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.tests}/html"/>
        </junitreport>
    </target>
    
    <!---   
    <target name="jar" depends="javamop, test, plugins, logicrepository" />
    -->
</project>
